<?xml version="1.0"?>
<doc>
    <assembly>
        <name>KWiJisho</name>
    </assembly>
    <members>
        <member name="T:KWiJisho.APIs.CatApi">
            <summary>
            This class provides methods for interacting with the Cat's API using
            HTTP requests.
            API GitHub Repository: <a href="https://github.com/httpcats/http.cat"/>
            </summary>
        </member>
        <member name="F:KWiJisho.APIs.CatApi.HttpClient">
            <summary>
            HttpClient responsible for making api requests.
            </summary>
        </member>
        <member name="T:KWiJisho.APIs.ChatGPT">
            <summary>
            This class provides methods for interacting with the OpenAI model using the OpenAI dotnet library.
            API Documentation: <a href="https://github.com/openai/openai-dotnet"/>
            </summary>
        </member>
        <member name="F:KWiJisho.APIs.ChatGPT.ChatClient">
            <summary>
            Represents an instance of the ChatGPT API Client configuration from OpenAI.
            </summary>
        </member>
        <member name="F:KWiJisho.APIs.ChatGPT.LogContext">
            <summary>
            Represents a instance of KWiJisho log context.
            </summary>
        </member>
        <member name="M:KWiJisho.APIs.ChatGPT.GetPromptSummarizeTextAsync(System.String)">
            <summary>
            Asynchronous method to generate a prompt for summarizing text.
            </summary>
            <param name="input">The text to be summarized.</param>
            <returns>A Task representing the asynchronous operation, yielding the generated prompt.</returns>
        </member>
        <member name="M:KWiJisho.APIs.ChatGPT.GetPromptTranslateToBrazilianPortugueseAsync(System.String)">
            <summary>
            Asynchronous method to generate a prompt for translating text to Brazilian Portuguese.
            </summary>
            <param name="input">The text to be translated.</param>
            <returns>A Task representing the asynchronous operation, yielding the generated prompt.</returns>
        </member>
        <member name="M:KWiJisho.APIs.ChatGPT.GetKWiJishoPromptAsync(System.String)">
            <summary>
            Asynchronous method to generate a prompt in the style of "KWiJisho".
            </summary>
            <param name="input">The user input text.</param>
            <returns>A Task representing the asynchronous operation, yielding the generated prompt.</returns>
        </member>
        <member name="M:KWiJisho.APIs.ChatGPT.GetPromptAsync(System.String,System.String)">
            <summary>
            Asynchronous method to generate a prompt for the OpenAI GPT-3.5 model.
            </summary>
            <param name="input">The user input text.</param>
            <param name="promptStyle">The style of the prompt to be added.</param>
            <returns>A Task representing the asynchronous operation, yielding the generated prompt.</returns>
        </member>
        <member name="T:KWiJisho.APIs.NasaApi">
            <summary>
            This class provides methods for interacting with the NASA's API using
            HTTP requests.
            API Documentation: <a href="https://api.nasa.gov/"/>
            </summary>
            <summary>
            This class provides methods for interacting with the NASA's API using
            HTTP requests.
            API Documentation: <a href="https://api.nasa.gov/"/>
            </summary>
        </member>
        <member name="P:KWiJisho.APIs.NasaApi.HttpService">
            <summary>
            Gets the HTTP service instance for making API requests.
            </summary>
        </member>
        <member name="M:KWiJisho.APIs.NasaApi.GetHttpCatByStringAsync(System.String)">
            <summary>
            
            </summary>
            <returns>An asynchronous <see cref="T:System.Threading.Tasks.Task"/> that represents the operation. The task result contains an <see cref="T:KWiJisho.APIs.NasaApi.Apod.ApodResponse"/> object.</returns>
        </member>
        <member name="M:KWiJisho.APIs.NasaApi.GetHttpCatAsync(System.Net.HttpStatusCode)">
            <summary>
            Makes a generic request to Cat's API with the specified endpoint.
            </summary>
            <param name="httpStatusCode">The endpoint for the API request.</param>
            <returns>An asynchronous task that represents the operation. The task result contains the API response as a string.</returns>
        </member>
        <member name="T:KWiJisho.APIs.NasaApi.Apod">
            <summary>
            This class provides methods for interacting with the APOD (Astronomy Picture of
            the Day) API using HTTP requests.
            </summary>
        </member>
        <member name="M:KWiJisho.APIs.NasaApi.Apod.GetApodAsync">
            <summary>
            Retrieves the Astronomy Picture of the Day (APOD) through a request to NASA's API.
            </summary>
            <returns>An asynchronous <see cref="T:System.Threading.Tasks.Task"/> that represents the operation. The task result contains an <see cref="T:KWiJisho.APIs.NasaApi.Apod.ApodResponse"/> object.</returns>
        </member>
        <member name="M:KWiJisho.APIs.NasaApi.Apod.GetUsingNasaApiAsync(System.String)">
            <summary>
            Makes a generic request to NASA's API with the specified endpoint.
            </summary>
            <param name="request">The endpoint for the API request.</param>
            <returns>An asynchronous task that represents the operation. The task result contains the API response as a string.</returns>
        </member>
        <member name="T:KWiJisho.APIs.NasaApi.Apod.ApodResponse">
            <summary>
            Represents the APOD Json response for a NASA's API HTTP request.
            </summary>
        </member>
        <member name="P:KWiJisho.APIs.NasaApi.Apod.ApodResponse.Title">
            <summary>
            Title of the current Astronomy Picture of the Day.
            </summary>
        </member>
        <member name="P:KWiJisho.APIs.NasaApi.Apod.ApodResponse.Explanation">
            <summary>
            Explanation of the current Astronomy Picture of the Day.
            </summary>
        </member>
        <member name="P:KWiJisho.APIs.NasaApi.Apod.ApodResponse.Date">
            <summary>
            Date of the current Astronomy Picture of the Day.
            </summary>
        </member>
        <member name="P:KWiJisho.APIs.NasaApi.Apod.ApodResponse.Url">
            <summary>
            Image URL of the current Astronomy Picture of the Day.
            </summary>
        </member>
        <member name="P:KWiJisho.APIs.NasaApi.Apod.ApodResponse.Copyright">
            <summary>
            Copyright of the current Astronomy Picture of the Day.
            </summary>
        </member>
        <member name="P:KWiJisho.APIs.NasaApi.Apod.ApodResponse.MediaType">
            <summary>
            Media type of the current Astronomy Picture of the Day.
            </summary>
        </member>
        <member name="T:KWiJisho.APIs.NasaApi.Apod.ApodResponse.Error">
            <summary>
            Represents errors ocurred on Json response for a NASA's API HTTP request.
            </summary>
        </member>
        <member name="P:KWiJisho.APIs.NasaApi.Apod.ApodResponse.Error.Code">
            <summary>
            Error code for the current Astronomy Picture of the Day.
            </summary>
        </member>
        <member name="P:KWiJisho.APIs.NasaApi.Apod.ApodResponse.Error.Message">
            <summary>
            Error message for the current Astronomy Picture of the Day.
            </summary>
        </member>
        <member name="P:KWiJisho.APIs.NasaApi.Apod.ApodResponse.Error.ServiceVersion">
            <summary>
            Error application service version for the current Astronomy Picture of the Day.
            </summary>
        </member>
        <member name="T:KWiJisho.Commands.CommandBasic">
            <summary>
            Provides methods for basic prefix and slash commands.
            </summary>
        </member>
        <member name="M:KWiJisho.Commands.CommandBasic.CommandRandomAnimatedEmojiAsync(DSharpPlus.Entities.DiscordChannel)">
            <summary>
            Sends a random animated emoji from <see cref="F:KWiJisho.Data.DiscordEmojis.AnimatedEmojis"/>.
            </summary>
            <param name="discordChannel">The discord channel where the command will be executed.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the current asynchronous task.</returns>
        </member>
        <member name="M:KWiJisho.Commands.CommandBasic.CommandRandomAnimatedMemeEmojiAsync(DSharpPlus.Entities.DiscordChannel)">
            <summary>
            Sends a random animated emoji from <see cref="F:KWiJisho.Data.DiscordEmojis.AnimatedMemeEmojis"/>.
            </summary>
            <param name="discordChannel">The discord channel where the command will be executed.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the current asynchronous task.</returns>
        </member>
        <member name="M:KWiJisho.Commands.CommandBasic.CommandRandomAnimatedPartyEmojiAsync(DSharpPlus.Entities.DiscordChannel)">
            <summary>
            Sends a random animated emoji from <see cref="F:KWiJisho.Data.DiscordEmojis.AnimatedPartyEmojis"/>.
            </summary>
            <param name="discordChannel">The discord channel where the command will be executed.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the current asynchronous task.</returns>
        </member>
        <member name="T:KWiJisho.Commands.CommandBirthday">
            <summary>
            Provides methods for birthday prefix and slash commands.
            </summary>
        </member>
        <member name="P:KWiJisho.Commands.CommandBirthday.Months">
            <summary>
            Represents the year months in Portuguese.
            </summary>
        </member>
        <member name="M:KWiJisho.Commands.CommandBirthday.CommandNextBirthdayAsync(DSharpPlus.Entities.DiscordChannel,DSharpPlus.Entities.DiscordGuild)">
            <summary>
            Sends a birthday message for the next upcoming birthday in the specified Discord channel.
            </summary>
            <param name="discordChannel">The Discord channel where the message will be sent.</param>
            <param name="discordGuild">The Discord guild containing the users.</param>
        </member>
        <member name="M:KWiJisho.Commands.CommandBirthday.CommandBirthdayListAsync(DSharpPlus.Entities.DiscordChannel,DSharpPlus.Entities.DiscordGuild)">
            <summary>
            Sends a list of upcoming birthdays in the specified Discord channel.
            </summary>
            <param name="discordChannel">The Discord channel where the message will be sent.</param>
            <param name="discordGuild">The Discord guild containing the users.</param>
        </member>
        <member name="T:KWiJisho.Commands.CommandInfo">
            <summary>
            Provides methods for info prefix and slash commands.
            </summary>
        </member>
        <member name="M:KWiJisho.Commands.CommandInfo.ExecuteHelpAsync(DSharpPlus.Entities.DiscordChannel,DSharpPlus.DiscordClient)">
            <summary>
            Sends a help message containing a list of available commands and their descriptions to the specified Discord channel.
            </summary>
            <param name="discordChannel">The Discord channel where the message will be sent.</param>
            <param name="discordClient">The Discord client instance.</param>
        </member>
        <member name="M:KWiJisho.Commands.CommandInfo.ExecuteInfoAsync(DSharpPlus.Entities.DiscordChannel,DSharpPlus.DiscordClient)">
            <summary>
            Sends an information message about the bot, its creator, and contact details to the specified Discord channel.
            </summary>
            <param name="discordChannel">The Discord channel where the message will be sent.</param>
            <param name="discordClient">The Discord client instance.</param>
        </member>
        <member name="T:KWiJisho.Commands.CommandKwiGpt">
            <summary>
            Provides methods for KWiGPT prefix and slash commands.
            </summary>
        </member>
        <member name="M:KWiJisho.Commands.CommandKwiGpt.ExecuteKWiJishoPromptAsync(DSharpPlus.Entities.DiscordChannel,System.String[])">
            <summary>
            Represents the command to get the chat gpt prompt in KWiJisho style.
            </summary>
            <param name="discordChannel">The Discord channel where the prompt will be sent.</param>
            <param name="input">The content of user input.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> with the current asynchronous method.</returns>
        </member>
        <member name="T:KWiJisho.Commands.CommandNasa">
            <summary>
            Provides methods for NASA prefix and slash commands.
            </summary>
        </member>
        <member name="M:KWiJisho.Commands.CommandNasa.ApodEnglishAsync(DSharpPlus.Entities.DiscordChannel)">
            <summary>
            Retrieves and sends the english version of the Astronomy Picture of the Day (APOD) to the specified Discord channel.
            </summary>
            <param name="discordChannel">The Discord channel where the APOD message will be sent.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:KWiJisho.Commands.CommandNasa.ApodPortugueseAsync(DSharpPlus.Entities.DiscordChannel)">
            <summary>
            Retrieves and sends the portuguese version of the Astronomy Picture of the Day (APOD) to the specified Discord channel.
            </summary>
            <param name="discordChannel">The Discord channel where the translated APOD message will be sent.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="T:KWiJisho.Commands.CommandNotice">
            <summary>
            Provides methods for notice prefix and slash commands.
            </summary>
        </member>
        <member name="F:KWiJisho.Commands.CommandNotice.Yellow">
            <summary>
            Represents the Yellow color.
            </summary>
        </member>
        <member name="M:KWiJisho.Commands.CommandNotice.ExecuteNewsAsync(DSharpPlus.DiscordClient,DSharpPlus.Entities.DiscordMember,System.String,System.String,System.Boolean,DSharpPlus.Entities.DiscordAttachment)">
            <summary>
            Method responsible for sending and creating a "news" in the news channel.
            </summary>
            <param name="discordClient">The discord client instance.</param>
            <param name="discordMember">The discord member who sent the message.</param>
            <param name="title">The title of the news.</param>
            <param name="description">The description of the news.</param>
            <param name="sendInTramontina">If true the message will be sent in Tramontina; otherwise, it will be sent in my test server.</param>
            <param name="discordAttachments">The Discord images for being attached on the embed. Only the first one will be sent</param>
            <returns></returns>
        </member>
        <member name="T:KWiJisho.Commands.CommandThemeTramontina">
            <summary>
            Provides methods for theme prefix and slash commands.
            </summary>
        </member>
        <member name="F:KWiJisho.Commands.CommandThemeTramontina.ThemeChangeCooldown">
            <summary>
            Represents the cooldown for theme change.
            </summary>
        </member>
        <member name="F:KWiJisho.Commands.CommandThemeTramontina.TramontinaChannels">
            <summary>
            Channels from tramontina server that can receive theme changing.
            </summary>
        </member>
        <member name="M:KWiJisho.Commands.CommandThemeTramontina.SetThemeAsync(DSharpPlus.Entities.DiscordChannel,DSharpPlus.DiscordClient,KWiJisho.Commands.CommandThemeTramontina.EmojiTheme,System.String,System.String,System.String)">
            <summary>
            Sets the Tramontina server to a Theme according with parameterization.
            </summary>
            <param name="discordChannel">The Discord channel where the command is being executed.</param>
            <param name="discordClient">The Discord client instance.</param>
            <param name="emojiTheme">The chosen theme to set the Discord server.</param>
            <param name="title">The title from the theme notice.</param>
            <param name="description">The description from the theme notice</param>
            <param name="serverNameSuggestion">The server name suggestion.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the method execution.</returns>
        </member>
        <member name="M:KWiJisho.Commands.CommandThemeTramontina.ResetThemeAsync(DSharpPlus.Entities.DiscordChannel,DSharpPlus.DiscordClient)">
            <summary>
            Sets the Tramontina server to Default Theme.
            </summary>
            <param name="discordChannel">The Discord channel where the command is being executed.</param>
            <param name="discordClient">The Discord client instance.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the method execution.</returns>
        </member>
        <member name="M:KWiJisho.Commands.CommandThemeTramontina.SetChristmasThemeAsync(DSharpPlus.Entities.DiscordChannel,DSharpPlus.DiscordClient)">
            <summary>
            Sets the Tramontina server to Christmas Theme.
            </summary>
            <param name="discordChannel">The Discord channel where the command is being executed.</param>
            <param name="discordClient">The Discord client instance.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the method execution.</returns>
        </member>
        <member name="M:KWiJisho.Commands.CommandThemeTramontina.SetEasterThemeAsync(DSharpPlus.Entities.DiscordChannel,DSharpPlus.DiscordClient)">
            <summary>
            Sets the Tramontina server to Easter Theme.
            </summary>
            <param name="discordChannel">The Discord channel where the command is being executed.</param>
            <param name="discordClient">The Discord client instance.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the method execution.</returns>
        </member>
        <member name="M:KWiJisho.Commands.CommandThemeTramontina.SetHalloweenThemeAsync(DSharpPlus.Entities.DiscordChannel,DSharpPlus.DiscordClient)">
            <summary>
            Sets the Tramontina server to Halloween Theme.
            </summary>
            <param name="discordChannel">The Discord channel where the command is being executed.</param>
            <param name="discordClient">The Discord client instance.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the method execution.</returns>
        </member>
        <member name="T:KWiJisho.Commands.CommandThemeTramontina.EmojiTheme">
            <summary>
            Represents seasonal themes that you can set to the Discord server.
            </summary>
        </member>
        <member name="F:KWiJisho.Commands.CommandThemeTramontina.EmojiTheme.Default">
            <summary>
            Represents the Default theme for a server.
            </summary>
        </member>
        <member name="F:KWiJisho.Commands.CommandThemeTramontina.EmojiTheme.Christmas">
            <summary>
            Represents the Christmas theme for a setver.
            </summary>
        </member>
        <member name="F:KWiJisho.Commands.CommandThemeTramontina.EmojiTheme.Easter">
            <summary>
            Represents the Easter theme for a setver.
            </summary>
        </member>
        <member name="F:KWiJisho.Commands.CommandThemeTramontina.EmojiTheme.Halloween">
            <summary>
            Represents the Halloween theme for a setver.
            </summary>
        </member>
        <member name="T:KWiJisho.Commands.Prefix.PrefixCommandManager">
            <summary>
            Provides a set of commands and classes for managing commands in a Discord server.
            </summary>
            <summary>
            Provides a set of commands and classes for managing commands in a Discord server.
            </summary>
            <summary>
            Provides a set of commands and classes for managing commands in a Discord server.
            </summary>
            <summary>
            Provides a set of commands and classes for managing commands in a Discord server.
            </summary>
            <summary>
            Provides a set of commands and classes for managing commands in a Discord server.
            </summary>
            <summary>
            Provides a set of commands and classes for managing commands in a Discord server.
            </summary>
            <summary>
            Provides a set of commands and classes for managing commands in a Discord server.
            </summary>
            <summary>
            Provides a set of commands and classes for managing commands in a Discord server.
            </summary>
        </member>
        <member name="T:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixBasic">
            <summary>
            Represents a set of basic prefix commands.
            </summary>
        </member>
        <member name="F:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixBasic.emoji">
            <summary>
            Represents the command to send a random animated emoji.
            </summary>
        </member>
        <member name="F:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixBasic.emojim">
            <summary>
            Represents the command to send a random animated meme emoji.
            </summary>
        </member>
        <member name="F:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixBasic.emojip">
            <summary>
            Represents the command to send a random animated party emoji.
            </summary>
        </member>
        <member name="M:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixBasic.SendRandomAnimatedEmojiAsync(DSharpPlus.CommandsNext.CommandContext)">
            <summary>
            Represents the asynchronous prefix send random animated emoji method called when sending a random animated emoji.
            </summary>
            <param name="commandContext">The command context from the current command call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the current asynchronous task.</returns>
        </member>
        <member name="M:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixBasic.SendRandomMemeEmojiAsync(DSharpPlus.CommandsNext.CommandContext)">
            <summary>
            Represents the asynchronous prefix send random animated meme emoji method called when sending a random meme animated emoji.
            </summary>
            <param name="commandContext">The command context from the current command call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the current asynchronous task.</returns>
        </member>
        <member name="M:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixBasic.SendRandomPartyEmojiAsync(DSharpPlus.CommandsNext.CommandContext)">
            <summary>
            Represents the asynchronous prefix send random animated party emoji method called when sending a random party animated emoji.
            </summary>
            <param name="commandContext">The command context from the current command call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the current asynchronous task.</returns>
        </member>
        <member name="T:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixBirthday">
            <summary>
            Represents a set of birthday prefix commands.
            </summary>
        </member>
        <member name="F:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixBirthday.nextBirthday">
            <summary>
            Represents the command to show the next person to have a birthday.
            </summary>
        </member>
        <member name="F:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixBirthday.listBirthday">
            <summary>
            Represents the command to list people will have birthday.
            </summary>
        </member>
        <member name="M:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixBirthday.GetNextBirthdayAsync(DSharpPlus.CommandsNext.CommandContext)">
            <summary>
            Represents the asynchronous prefix get next birthday method called when requesting to show the next person to have a birthday.
            </summary>
            <param name="commandContext">The command context from the current command call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the current asynchronous task.</returns>
        </member>
        <member name="M:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixBirthday.GetListBirthdayAsync(DSharpPlus.CommandsNext.CommandContext)">
            <summary>
            Represents the asynchronous prefix get birthday list called when requesting to show the list of people to have a birthday.
            </summary>
            <param name="commandContext">The command context from the current command call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the current asynchronous task.</returns>
        </member>
        <member name="P:KWiJisho.Commands.Prefix.PrefixCommandManager.CommandGroups">
            <summary>
            Gets or sets the list of command groups.
            </summary>
        </member>
        <member name="P:KWiJisho.Commands.Prefix.PrefixCommandManager.Astronomy">
            <summary>
            Gets the command group for Astronomy commands.
            </summary>
        </member>
        <member name="P:KWiJisho.Commands.Prefix.PrefixCommandManager.ChatGpt">
            <summary>
            Gets the command group for ChatGPT commands.
            </summary>
        </member>
        <member name="P:KWiJisho.Commands.Prefix.PrefixCommandManager.Info">
            <summary>
            Gets the command group for Information and Help commands.
            </summary>
        </member>
        <member name="P:KWiJisho.Commands.Prefix.PrefixCommandManager.Manage">
            <summary>
            Gets the command group for Theme commands.
            </summary>
        </member>
        <member name="P:KWiJisho.Commands.Prefix.PrefixCommandManager.Birthday">
            <summary>
            Gets the command group for Birthday commands.
            </summary>
        </member>
        <member name="P:KWiJisho.Commands.Prefix.PrefixCommandManager.Basic">
            <summary>
            Gets the command group for Basic commands.
            </summary>
        </member>
        <member name="T:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixInfo">
            <summary>
            Represents a set of info prefix commands.
            </summary>
        </member>
        <member name="F:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixInfo.furtherHelpMessage">
            <summary>
            Constant string that holds the further help message.
            </summary>
        </member>
        <member name="F:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixInfo.help">
            <summary>
            Represents the command to show help about the Discord bot commands.
            </summary>
        </member>
        <member name="F:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixInfo.info">
            <summary>
            Represents the command to show information about the bot and the bot owner.
            </summary>
        </member>
        <member name="M:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixInfo.GetHelpAsync(DSharpPlus.CommandsNext.CommandContext)">
            <summary>
            Represents the asynchronous prefix help method called when user asks for the prefix help command.
            </summary>
            <param name="commandContext">The command context from the current command call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the current asynchronous task.</returns>
        </member>
        <member name="M:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixInfo.GetInfoAsync(DSharpPlus.CommandsNext.CommandContext)">
            <summary>
            Represents the asynchronous prefix info method called when user asks for the prefix info command.
            </summary>
            <param name="commandContext">The command context from the current command call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the current asynchronous task.</returns>
        </member>
        <member name="T:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixKwiGpt">
            <summary>
            Represents a set of KWiGPT prefix commands.
            </summary>
        </member>
        <member name="F:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixKwiGpt.k">
            <summary>
            Represents the command to get the chat gpt prompt in KWiJisho style.
            </summary>
        </member>
        <member name="M:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixKwiGpt.GetChatGptPromptAsync(DSharpPlus.CommandsNext.CommandContext,System.String[])">
            <summary>
            Represent the asynchronous prefix get chat gpt prompt async method called when user uses the
            command to interact with the bot with ChatGpt in KWiJisho style.
            </summary>
            <param name="commandContext">The command context from the current command call.</param>
            <param name="inputs">The user input for getting the chat prompt</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the current asynchronous task.</returns>
        </member>
        <member name="T:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixNasa">
            <summary>
            Represents a set of NASA prefix commands.
            </summary>
        </member>
        <member name="F:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixNasa.apod">
            <summary>
            Represent the command to get the APOD in english.
            </summary>
        </member>
        <member name="F:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixNasa.apodPortuguese">
            <summary>
            Represent the command to get the APOD in portuguese.
            </summary>
        </member>
        <member name="M:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixNasa.ApodEnglishAsync(DSharpPlus.CommandsNext.CommandContext)">
            <summary>
            Represents the asynchronous prefix APOD method callend when user asks for the APOD command.
            </summary>
            <param name="commandContext">The command context from the current command call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the current asynchronous task.</returns>
        </member>
        <member name="M:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixNasa.ApodPortugueseAsync(DSharpPlus.CommandsNext.CommandContext)">
            <summary>
            Represents the asynchronous prefix APOD in portuguese method called when user asks for the APOD in portuguese command.
            </summary>
            <param name="commandContext">The command context from the current command call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the current asynchronous task.</returns>
            <returns></returns>
        </member>
        <member name="T:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixNotice">
            <summary>
            Represents a set of notice prefix commands.
            </summary>
        </member>
        <member name="F:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixNotice.sendNews">
            <summary>
            Represents the send news prefix command.
            </summary>
        </member>
        <member name="M:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixNotice.SendNewsAsync(DSharpPlus.CommandsNext.CommandContext,System.String,System.String,System.Boolean)">
            <summary>
            Prefix send news command method to send news at the news' channel.
            </summary>
            <param name="commandContext">The command context.</param>
            <param name="title">The news' title.s</param>
            <param name="description">The news' description.s</param>
            <param name="sendInTramontina">If the news should be send in <see cref="F:KWiJisho.Data.Servers.Tramontina"/>; otherwise, it will send it to <see cref="F:KWiJisho.Data.Servers.Personal"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing the result from the asynchronous method.</returns>
        </member>
        <member name="T:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixTheme">
            <summary>
            Represents a set of theme prefix commands.
            </summary>
        </member>
        <member name="T:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixTheme.PrefixThemeTramontina">
            <summary>
            Represents a set of prefix commands to change theme designed specifically for Tramontina Discord server.
            </summary>
        </member>
        <member name="F:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixTheme.PrefixThemeTramontina.themeReset">
            <summary>
            Represents the command to set the Default Theme.
            </summary>
        </member>
        <member name="F:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixTheme.PrefixThemeTramontina.themeChristmas">
            <summary>
            Represents the command to set the Christmas Theme.
            </summary>
        </member>
        <member name="F:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixTheme.PrefixThemeTramontina.themeEaster">
            <summary>
            Represents the command to set the Easter Theme.
            </summary>
        </member>
        <member name="F:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixTheme.PrefixThemeTramontina.themeHalloween">
            <summary>
            Represents the command to set the Halloween Theme.
            </summary>
        </member>
        <member name="M:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixTheme.PrefixThemeTramontina.ResetThemeAsync(DSharpPlus.CommandsNext.CommandContext)">
            <summary>
            Represents the asynchronous prefix reset theme method called when user asks for the prefix reset theme command.
            </summary>
            <param name="commandContext">The command context from the current command call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the current asynchronous task.</returns>
        </member>
        <member name="M:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixTheme.PrefixThemeTramontina.SetChristmasThemeAsync(DSharpPlus.CommandsNext.CommandContext)">
            <summary>
            Represents the asynchronous prefix christmas theme method called when user asks for the prefix christmas theme command.
            </summary>
            <param name="commandContext">The command context from the current command call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the current asynchronous task.</returns>
        </member>
        <member name="M:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixTheme.PrefixThemeTramontina.SetEasterThemeAsync(DSharpPlus.CommandsNext.CommandContext)">
            <summary>
            Represents the asynchronous prefix easter theme method called when user asks for the prefix easter theme command.
            </summary>
            <param name="commandContext">The command context from the current command call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the current asynchronous task.</returns>
        </member>
        <member name="M:KWiJisho.Commands.Prefix.PrefixCommandManager.PrefixTheme.PrefixThemeTramontina.SetHalloweenThemeAsync(DSharpPlus.CommandsNext.CommandContext)">
            <summary>
            Represents the asynchronous prefix halloween theme method called when user asks for the prefix halloween theme command.
            </summary>
            <param name="commandContext">The command context from the current command call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the current asynchronous task.</returns>
        </member>
        <member name="T:KWiJisho.Commands.Prefix.PrefixCommand">
            <summary>
            Represents a single Discord command.
            </summary>
        </member>
        <member name="P:KWiJisho.Commands.Prefix.PrefixCommand.Name">
            <summary>
            Gets or initializes the name of the command.
            </summary>
        </member>
        <member name="P:KWiJisho.Commands.Prefix.PrefixCommand.Description">
            <summary>
            Gets or initializes the description of the commands.
            </summary>
        </member>
        <member name="P:KWiJisho.Commands.Prefix.PrefixCommand.Permissions">
            <summary>
            Gets or initializes the required permissions for the command.
            </summary>
        </member>
        <member name="M:KWiJisho.Commands.Prefix.PrefixCommand.#ctor(System.String,System.String,KWiJisho.Commands.Prefix.PrefixCommandGroup,DSharpPlus.Permissions)">
            <summary>
            Initializes a new instance of the <see cref="T:KWiJisho.Commands.Prefix.PrefixCommand"/> class.
            </summary>
            <param name="name">The name of the command.</param>
            <param name="description">The description of the command.</param>
            <param name="group">The command group to which this command belongs.</param>
            <param name="permission">The required permissions for the command.</param>
        </member>
        <member name="T:KWiJisho.Commands.Prefix.PrefixCommandGroup">
            <summary>
            Represents a group and holds a list with a set of Discord commands.
            </summary>
        </member>
        <member name="P:KWiJisho.Commands.Prefix.PrefixCommandGroup.Name">
            <summary>
            Gets or sets the name of the prefix command group.
            </summary>
        </member>
        <member name="P:KWiJisho.Commands.Prefix.PrefixCommandGroup.Commands">
            <summary>
            Gets or sets the list of commands in the prefix command group.
            </summary>
        </member>
        <member name="M:KWiJisho.Commands.Prefix.PrefixCommandGroup.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:KWiJisho.Commands.Prefix.PrefixCommandGroup"/> class.
            </summary>
            <param name="name">The name of the command group.</param>
        </member>
        <member name="M:KWiJisho.Commands.Prefix.PrefixCommandGroup.ToString">
            <inheritdoc/>
        </member>
        <member name="T:KWiJisho.Commands.Slash.SlashBasic">
            <summary>
            Represents a set of basic slash commands.
            </summary>
        </member>
        <member name="T:KWiJisho.Commands.Slash.SlashBasic.Emoji">
            <summary>
            Represents a set of emoji slash commands.
            </summary>
        </member>
        <member name="M:KWiJisho.Commands.Slash.SlashBasic.Emoji.ExecuteSlashRandomAnimatedEmojiAsync(DSharpPlus.SlashCommands.InteractionContext)">
            <summary>
            Represents the command to send a random animated emoji.
            </summary>
        </member>
        <member name="M:KWiJisho.Commands.Slash.SlashBasic.Emoji.ExecuteSlashRandomAnimatedMemeEmojiAsync(DSharpPlus.SlashCommands.InteractionContext)">
            <summary>
            Represents the command to send a random animated meme emoji.
            </summary>
        </member>
        <member name="M:KWiJisho.Commands.Slash.SlashBasic.Emoji.ExecuteSlashRandomAnimatedPartyEmojiAsync(DSharpPlus.SlashCommands.InteractionContext)">
            <summary>
            Represents the command to send a random animated party emoji.
            </summary>
        </member>
        <member name="T:KWiJisho.Commands.Slash.SlashBirthday">
            <summary>
            Represents a set of birthday slash commands.
            </summary>
        </member>
        <member name="M:KWiJisho.Commands.Slash.SlashBirthday.ExecuteSlashNextBirthdayAsync(DSharpPlus.SlashCommands.InteractionContext)">
            <summary>
            Represents the command to show the next person to have birthday.
            </summary>
        </member>
        <member name="M:KWiJisho.Commands.Slash.SlashBirthday.ExecuteSlashBirthdayListAsync(DSharpPlus.SlashCommands.InteractionContext)">
            <summary>
            Represents the command to list people will have birthday.
            </summary>
        </member>
        <member name="M:KWiJisho.Commands.Slash.SlashBirthday.ExecuteSlashHappyBirthdayAsync(DSharpPlus.SlashCommands.InteractionContext,DSharpPlus.Entities.DiscordUser)">
            <summary>
            Represents the command to say happy birthday to someone.
            </summary>
        </member>
        <member name="T:KWiJisho.Commands.Slash.SlashConfig">
            <summary>
            Represents a set of config slash commands.
            </summary>
        </member>
        <member name="T:KWiJisho.Commands.Slash.SlashConfig.Config">
            <summary>
            Represents a set of config slash commands.
            </summary>
        </member>
        <member name="T:KWiJisho.Commands.Slash.SlashConfig.Config.Channel">
            <summary>
            Represents a set of channel slash commands.
            </summary>
        </member>
        <member name="M:KWiJisho.Commands.Slash.SlashConfig.Config.Channel.ExecuteSlashLinkChannelAsync(DSharpPlus.SlashCommands.InteractionContext,DSharpPlus.Entities.DiscordChannel,KWiJisho.Database.Services.ServerService.ChannelLink)">
            <summary>
            Represents the command to configure a link to a channel.
            </summary>
        </member>
        <member name="M:KWiJisho.Commands.Slash.SlashConfig.Config.Channel.ExecuteSlashUnlinkChannelAsync(DSharpPlus.SlashCommands.InteractionContext,KWiJisho.Database.Services.ServerService.ChannelLink)">
            <summary>
            Represents the command to configure an unlink to a channel.
            </summary>
        </member>
        <member name="M:KWiJisho.Commands.Slash.SlashConfig.Config.Channel.ExecuteSlashViewChannelsAsync(DSharpPlus.SlashCommands.InteractionContext)">
            <summary>
            Represents the command to see channel link settings.
            </summary>
        </member>
        <member name="T:KWiJisho.Commands.Slash.SlashInfo">
            <summary>
            Represents a set of info slash commands.
            </summary>
        </member>
        <member name="M:KWiJisho.Commands.Slash.SlashInfo.ExecuteSlashHelpAsync(DSharpPlus.SlashCommands.InteractionContext)">
            <summary>
            Represents the command to show help about the Discord bot commands.
            </summary>
        </member>
        <member name="M:KWiJisho.Commands.Slash.SlashInfo.ExecuteSlashInfoAsync(DSharpPlus.SlashCommands.InteractionContext)">
            <summary>
            Represents the command to show information about the bot and the bot owner.
            </summary>
        </member>
        <member name="T:KWiJisho.Commands.Slash.SlashKwiGpt">
            <summary>
            Represents a set of KWiGPT slash commands.
            </summary>
        </member>
        <member name="M:KWiJisho.Commands.Slash.SlashKwiGpt.ExecuteSlashKWiJishoPromptAsync(DSharpPlus.SlashCommands.InteractionContext,System.String)">
            <summary>
            Represent the command to interact with the bot with ChatGpt in KWiJisho style.
            </summary>
        </member>
        <member name="T:KWiJisho.Commands.Slash.SlashNasa">
            <summary>
            Represents a set of NASA slash commands.
            </summary>
        </member>
        <member name="T:KWiJisho.Commands.Slash.SlashNasa.Emoji">
            <summary>
            Represents a command group to senda random animated emoji.
            </summary>
        </member>
        <member name="M:KWiJisho.Commands.Slash.SlashNasa.Emoji.ExecuteEnglishApodAsync(DSharpPlus.SlashCommands.InteractionContext)">
            <summary>
            Represents the command to get the english APOD.
            </summary>
        </member>
        <member name="M:KWiJisho.Commands.Slash.SlashNasa.Emoji.ExecutePortugueseApodHelpAsync(DSharpPlus.SlashCommands.InteractionContext)">
            <summary>
            Represents the command to get the portuguese APOD.
            </summary>
        </member>
        <member name="T:KWiJisho.Commands.Slash.SlashNotice">
            <summary>
            Represents a set of notice slash commands.
            </summary>
        </member>
        <member name="M:KWiJisho.Commands.Slash.SlashNotice.ExecuteSlashNewsAsync(DSharpPlus.SlashCommands.InteractionContext,System.String,System.String,DSharpPlus.Entities.DiscordAttachment,System.Boolean)">
            <summary>
            Slash send news command method to send news at the news' channel.
            </summary>
            <param name="interactionContext">The interaction context from the command.</param>
            <param name="title">The news' title.s</param>
            <param name="description">The news' description.s</param>
            <param name="discordAttachment">The news's attachment. (if present)</param>
            <param name="sendInTramontina">If the news should be send in <see cref="F:KWiJisho.Data.Servers.Tramontina"/>; otherwise, it will send it to <see cref="F:KWiJisho.Data.Servers.Personal"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing the result from the asynchronous method.</returns>
        </member>
        <member name="T:KWiJisho.Commands.Slash.SlashThemeTramontina">
            <summary>
            Represents a set of notice slash commands.
            </summary>
        </member>
        <member name="M:KWiJisho.Commands.Slash.SlashThemeTramontina.ExecuteSlashResetAsync(DSharpPlus.SlashCommands.InteractionContext)">
            <summary>
            Represents the asynchronous slash reset theme method called when user asks for the slash reset theme command.
            </summary>
            <param name="interactionContext">The interaction context from the current command call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the current asynchronous task.</returns>
        </member>
        <member name="M:KWiJisho.Commands.Slash.SlashThemeTramontina.ExecuteSlashChristmasAsync(DSharpPlus.SlashCommands.InteractionContext)">
            <summary>
            Represents the asynchronous slash christmas theme method called when user asks for the slash christmas theme command.
            </summary>
            <param name="interactionContext">The interaction context from the current command call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the current asynchronous task.</returns>
        </member>
        <member name="M:KWiJisho.Commands.Slash.SlashThemeTramontina.ExecuteSlashEasterAsync(DSharpPlus.SlashCommands.InteractionContext)">
            <summary>
            Represents the asynchronous slash easter theme method called when user asks for the slash easter theme command.
            </summary>
            <param name="interactionContext">The interaction context from the current command call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the current asynchronous task.</returns>
        </member>
        <member name="M:KWiJisho.Commands.Slash.SlashThemeTramontina.ExecuteSlashHalloweenAsync(DSharpPlus.SlashCommands.InteractionContext)">
            <summary>
            Represents the asynchronous slash halloween theme method called when user asks for the slash halloween theme command.
            </summary>
            <param name="interactionContext">The interaction context from the current command call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> from the current asynchronous task.</returns>
        </member>
        <member name="P:KWiJisho.Config.ConfigJson.Prefix">
            <summary>
            Gets or sets the command prefix for the bot.
            </summary>
        </member>
        <member name="P:KWiJisho.Config.ConfigJson.Activity">
            <summary>
            Gets or sets the default bot activity.
            </summary>
        </member>
        <member name="P:KWiJisho.Config.ConfigJson.EnableChatGpt">
            <summary>
            Gets or sets the enable of ChatGPT.
            </summary>
        </member>
        <member name="F:KWiJisho.Config.ConfigJson.ChatGptModel">
            <summary>
            Gets or sets the model of ChatGPT.
            </summary>
        </member>
        <member name="P:KWiJisho.Config.ConfigJson.DefaultColor">
            <summary>
            Gets or sets the default color for bot messages.
            </summary>
        </member>
        <member name="P:KWiJisho.Config.ConfigJson.KWiJishoToken">
            <summary>
            Gets or sets the API token for KWiJisho.
            </summary>
        </member>
        <member name="P:KWiJisho.Config.ConfigJson.ChatGptToken">
            <summary>
            Gets or sets the API token for ChatGPT.
            </summary>
        </member>
        <member name="P:KWiJisho.Config.ConfigJson.NasaToken">
            <summary>
            Gets or sets the API token for NASA.
            </summary>
        </member>
        <member name="M:KWiJisho.Config.ConfigJson.SetValuesFromConfigJson(KWiJisho.Entities.ConfigJson)">
            <summary>
            Set values from ConfigJson file.
            </summary>
            <param name="configJson">The instance of the ConfigJson file.</param>
        </member>
        <member name="T:KWiJisho.Data.Colors">
            <summary>
            Class responsible for managing colors in the application.
            </summary>
        </member>
        <member name="T:KWiJisho.Data.DiscordUsers">
            <summary>
            Provides a static class for managing Discord users along with their identifiers.
            </summary>
        </member>
        <member name="P:KWiJisho.Data.DiscordUsers.Users">
            <summary>
            The list of users along with their identifiers.
            </summary>
        </member>
        <member name="T:KWiJisho.Data.DiscordEmojis">
            <summary>
            Static class that provides class, properties and methods for handling Discord emojis.
            </summary>
        </member>
        <member name="T:KWiJisho.Data.KWiJisho">
            <summary>
            Class that provides static basic information about KWiJisho bot.
            </summary>
        </member>
        <member name="F:KWiJisho.Data.KWiJisho.Name">
            <summary>
            KWiJisho project name gotten directly from <see cref="T:System.Reflection.Assembly"/>.
            </summary>
        </member>
        <member name="P:KWiJisho.Data.KWiJisho.Created">
            <summary>
            The date Karen Kujo project was first commit on <a href="https://github.com/monambike/kwijisho-discord-bot">GitHub repository</a>.
            </summary>
        </member>
        <member name="P:KWiJisho.Data.KWiJisho.KarenKujoBirthday">
            <summary>
            Gets the calculated birthday for Karen Kujo. Karen Kujo was born on December 1st,
            and the age is fixed at 15 years.
            The property provides the current date with the year adjusted to maintain the age of 15.
            </summary>
        </member>
        <member name="T:KWiJisho.Data.NotificationMessages">
            <summary>
            Notification service messages for welcome, goodbye and boost.
            </summary>
        </member>
        <member name="P:KWiJisho.Data.NotificationMessages.WelcomeMessages">
            <summary>
            Welcome messages for notification service.
            </summary>
        </member>
        <member name="P:KWiJisho.Data.NotificationMessages.GoodbyeMessages">
            <summary>
            Goodbye messages for notification service.
            </summary>
        </member>
        <member name="T:KWiJisho.Entities.Channel">
            <summary>
            The class that represents a new instance of a Discord channel with a
            unique identifier and a default name.
            <param name="id">The Discord channel unique identifier.</param>
            <param name="defaultName">The Discord channel default name.</param>
            </summary>
        </member>
        <member name="M:KWiJisho.Entities.Channel.#ctor(System.UInt64,System.String)">
            <summary>
            The class that represents a new instance of a Discord channel with a
            unique identifier and a default name.
            <param name="id">The Discord channel unique identifier.</param>
            <param name="defaultName">The Discord channel default name.</param>
            </summary>
        </member>
        <member name="F:KWiJisho.Entities.Channel.Id">
            <summary>
            The Discord channel unique identifier.
            </summary>
        </member>
        <member name="F:KWiJisho.Entities.Channel.DefaultName">
            <summary>
            The Discord channel default name.
            </summary>
        </member>
        <member name="M:KWiJisho.Entities.Channel.UpdateChannelNameAsync(DSharpPlus.DiscordClient,System.String)">
            <summary>
            Updates asynchronously the name of the Discord channel.
            </summary>
            <param name="discordClient">The Discord client instance.</param>
            <param name="newName">The new name for the Discord channel.</param>
        </member>
        <member name="T:KWiJisho.Entities.ChannelTramontina">
            <summary>
            Initializes a new instance of <see cref="T:KWiJisho.Entities.ChannelTramontina"/> class with the specified id, the default channel
            text title and emoji theme.
            </summary>
            <param name="id">The Id from the Discord channel.</param>
            <param name="defaultTextTitle">The default text title from the Discord channel.</param>
            <param name="emojiTheme">The emoji theme dictionary avaiable for this channel.</param>
        </member>
        <member name="M:KWiJisho.Entities.ChannelTramontina.#ctor(System.UInt64,System.String,System.Collections.Generic.Dictionary{KWiJisho.Commands.CommandThemeTramontina.EmojiTheme,System.String})">
            <summary>
            Initializes a new instance of <see cref="T:KWiJisho.Entities.ChannelTramontina"/> class with the specified id, the default channel
            text title and emoji theme.
            </summary>
            <param name="id">The Id from the Discord channel.</param>
            <param name="defaultTextTitle">The default text title from the Discord channel.</param>
            <param name="emojiTheme">The emoji theme dictionary avaiable for this channel.</param>
        </member>
        <member name="P:KWiJisho.Entities.ChannelTramontina.DefaultTextTitle">
            <summary>
            The default text title for the tramontina Discord channel.
            </summary>
        </member>
        <member name="P:KWiJisho.Entities.ChannelTramontina.EmojiTheme">
            <summary>
            The dictionary containing the EmojiTheme that represents the seasonal theme associate to the emoji, and
            the string that represents the emoji itself for the tramontina Discord channel.
            </summary>
        </member>
        <member name="M:KWiJisho.Entities.ChannelTramontina.ChangeEmoji(DSharpPlus.DiscordClient,System.String)">
            <summary>
            Change the emoji for current channel. At the current moment, you can do this twice with the same channel
            every 10 minutes.
            </summary>
            <param name="discordClient">The Discord client instance.</param>
            <param name="emoji">The emoji to be changed in the channel.</param>
        </member>
        <member name="T:KWiJisho.Entities.Color">
            <summary>
            Represents an RGB color with red, green, and blue components.
            </summary>
        </member>
        <member name="M:KWiJisho.Entities.Color.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            Represents an RGB color with red, green, and blue components.
            </summary>
        </member>
        <member name="P:KWiJisho.Entities.Color.Red">
            <summary>
            Gets or sets the red component of the RGB color.
            </summary>
        </member>
        <member name="P:KWiJisho.Entities.Color.Green">
            <summary>
            Gets or sets the green component of the RGB color.
            </summary>
        </member>
        <member name="P:KWiJisho.Entities.Color.Blue">
            <summary>
            Gets or sets the blue component of the RGB color.
            </summary>
        </member>
        <member name="P:KWiJisho.Entities.Color.DiscordColor">
            <summary>
            Gets a Discord color representation based on the RGB components.
            </summary>
        </member>
        <member name="P:KWiJisho.Entities.Color.Hexadecimal">
            <summary>
            Gets a Hexadecimal color representation based on the RGB components.
            </summary>
        </member>
        <member name="T:KWiJisho.Entities.ConfigJson">
            <summary>
            Class that represents the ConfigJson file for configuring the discord bot.
            </summary>
        </member>
        <member name="P:KWiJisho.Entities.ConfigJson.KWiJishoToken">
            <summary>
            Gets or initializes the Discord bot token for the KWiJisho module.
            </summary>
        </member>
        <member name="P:KWiJisho.Entities.ConfigJson.ChatGptToken">
            <summary>
            Gets or initializes the API token for accessing ChatGPT's services.
            </summary>
        </member>
        <member name="P:KWiJisho.Entities.ConfigJson.NasaToken">
            <summary>
            Gets or initializes the API token for accessing NASA's services.
            </summary>
        </member>
        <member name="M:KWiJisho.Entities.ConfigJson.DeserializeConfigJsonFileAsync">
            <summary>
            Asynchronously deserializes the content of the config.json file into a <see cref="T:KWiJisho.Entities.ConfigJson"/> instance.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation, yielding a <see cref="T:KWiJisho.Entities.ConfigJson"/> instance.</returns>
        </member>
        <member name="T:KWiJisho.Entities.Emoji">
            <summary>
            Class responsible for creating and handling custom Discord emojis.
            </summary>
        </member>
        <member name="P:KWiJisho.Entities.Emoji.Name">
            <summary>
            The discord emoji name.
            </summary>
        </member>
        <member name="P:KWiJisho.Entities.Emoji.Id">
            <summary>
            The discord emoji unique identifier.
            </summary>
        </member>
        <member name="P:KWiJisho.Entities.Emoji.Code">
            <summary>
            The discord emoji code responsible for outputing it into the chat.
            <c>&lt;a:{name}:{id}&gt;</c>
            </summary>
        </member>
        <member name="M:KWiJisho.Entities.Emoji.#ctor(System.String,System.UInt64)">
            <summary>
            Initializes a new instance of <see cref="T:KWiJisho.Entities.Emoji"/> class with the specified
            name and identifier.
            </summary>
            <param name="name">The name of the Discord emoji.</param>
            <param name="id">The unique identifier of the Discord emoji.</param>
        </member>
        <member name="M:KWiJisho.Entities.Emoji.ToString">
            <summary>
            Converts the Discord emoji to its string representation, which is the Discord emoji code.
            </summary>
            <returns>The Discord emoji code in the format "<c>&lt;a:{<see cref="P:KWiJisho.Entities.Emoji.Name"/>}:{<see cref="P:KWiJisho.Entities.Emoji.Id"/>}&gt;</c>".</returns>
        </member>
        <member name="T:KWiJisho.Entities.EmojiCatMeme">
            <summary>
            Represents a custom Discord emoji for cat meme emojis, inheriting from the base <see cref="T:KWiJisho.Entities.Emoji"/> class.
            </summary>
        </member>
        <member name="M:KWiJisho.Entities.EmojiCatMeme.#ctor(System.String,System.UInt64)">
            <summary>
            Initializes a new instance of <see cref="T:KWiJisho.Entities.EmojiCatMeme"/> with its emoji name and Id.
            </summary>
            <param name="name">The <see cref="T:KWiJisho.Entities.EmojiCatMeme"/> emoji name.</param>
            <param name="id">The <see cref="T:KWiJisho.Entities.EmojiCatMeme"/> emoji Id.</param>
        </member>
        <member name="T:KWiJisho.Entities.EmojiCatParty">
            <summary>
            Represents a custom Discord emoji for cat party emojis, inheriting from the base <see cref="T:KWiJisho.Entities.Emoji"/> class.
            </summary>
        </member>
        <member name="M:KWiJisho.Entities.EmojiCatParty.#ctor(System.String,System.UInt64)">
            <summary>
            Initializes a new instance of <see cref="T:KWiJisho.Entities.EmojiCatParty"/> with its emoji name and Id.
            </summary>
            <param name="name">The <see cref="T:KWiJisho.Entities.EmojiCatParty"/> emoji name.</param>
            <param name="id">The <see cref="T:KWiJisho.Entities.EmojiCatParty"/> emoji Id.</param>
        </member>
        <member name="T:KWiJisho.Entities.GuildEventEmbedBuilder">
            <summary>
            Represents a Discord Guild Event along with their identifier information.
            </summary>
        </member>
        <member name="P:KWiJisho.Entities.GuildEventEmbedBuilder.Title">
            <summary>
            Title for guild event.
            </summary>
        </member>
        <member name="P:KWiJisho.Entities.GuildEventEmbedBuilder.Description">
            <summary>
            Generated description for guild event.
            </summary>
        </member>
        <member name="P:KWiJisho.Entities.GuildEventEmbedBuilder.ImageUrl">
            <summary>
            Image for guild event.
            </summary>
        </member>
        <member name="P:KWiJisho.Entities.GuildEventEmbedBuilder.UpdateType">
            <summary>
            UpdateType for guild event.
            </summary>
        </member>
        <member name="P:KWiJisho.Entities.GuildEventEmbedBuilder.DiscordUser">
            <summary>
            DiscordUser for guild event. Required to generate the description.
            </summary>
        </member>
        <member name="M:KWiJisho.Entities.GuildEventEmbedBuilder.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:KWiJisho.Entities.GuildEventEmbedBuilder"/> class.
            </summary>
        </member>
        <member name="P:KWiJisho.Entities.Server.GuildId">
            <summary>
            Server guild Id.
            </summary>
        </member>
        <member name="P:KWiJisho.Entities.Server.GeneralChannelId">
            <summary>
            Server general channeld Id.
            </summary>
        </member>
        <member name="P:KWiJisho.Entities.Server.WelcomeChannelId">
            <summary>
            Server welcome channeld Id.
            </summary>
        </member>
        <member name="P:KWiJisho.Entities.Server.NewsChannelId">
            <summary>
            Server news channel Id.
            </summary>
        </member>
        <member name="P:KWiJisho.Entities.Server.BirthdayRoleId">
            <summary>
            Server birthday role Id.
            </summary>
        </member>
        <member name="P:KWiJisho.Entities.Server.LogChannelId">
            <summary>
            Server log channel Id.
            </summary>
        </member>
        <member name="T:KWiJisho.Entities.User">
            <summary>
            Represents a Discord user along with their identifier and additional information.
            </summary>
        </member>
        <member name="M:KWiJisho.Entities.User.#ctor(System.UInt64,System.DateTime,System.String,System.String,System.String)">
            <summary>
            Represents a Discord user along with their identifier and additional information.
            </summary>
        </member>
        <member name="P:KWiJisho.Entities.User.Id">
            <summary>
            The unique identifier of the user.
            </summary>
        </member>
        <member name="P:KWiJisho.Entities.User.Born">
            <summary>
            The date when the user was born.
            </summary>
        </member>
        <member name="P:KWiJisho.Entities.User.Age">
            <summary>
            The user age.
            </summary>
        </member>
        <member name="P:KWiJisho.Entities.User.FirstName">
            <summary>
            The user real first name.
            </summary>
        </member>
        <member name="P:KWiJisho.Entities.User.Nickname">
            <summary>
            The custom identifier or nickname associated with the user.
            </summary>
        </member>
        <member name="P:KWiJisho.Entities.User.NicknameVariation">
            <summary>
            The custom identifier or nickname associated with the user.
            </summary>
        </member>
        <member name="P:KWiJisho.Entities.User.Birthday">
            <summary>
            Gets or sets the user's birthday (if applicable).
            </summary>
        </member>
        <member name="M:KWiJisho.Entities.User.TryGetDiscordMemberAsync(DSharpPlus.Entities.DiscordGuild)">
            <summary>
            Tries to return a <see cref="P:KWiJisho.Entities.User.DiscordMember"/> representing the user in the specified server.
            If the user is not found, returns <see langword="null"/>. 
            </summary>
            <param name="discordGuild">The Discord guild where the user is expected to be a member.</param>
            <returns>Returns <see cref="P:KWiJisho.Entities.User.DiscordMember"/> if found; otherwise, returns <see langword="null"/>.</returns>
        </member>
        <member name="M:KWiJisho.Entities.User.AssignGuildToUserAsync(DSharpPlus.Entities.DiscordGuild)">
            <summary>
            Sets the user's associated Discord guild and Discord member.
            </summary>
            <param name="discordGuild">The Discord guild.</param>
        </member>
        <member name="M:KWiJisho.Entities.User.UnassignDiscordGuild">
            <summary>
            Clears the user's associated Discord guild and member information.
            </summary>
        </member>
        <member name="T:KWiJisho.Events.DiscordComponentHandler">
            <summary>
            Provides a set of events and methods fired when a interaction is made.
            </summary>
        </member>
        <member name="M:KWiJisho.Events.DiscordComponentHandler.OnComponentInteractionCreatedAsync(DSharpPlus.DiscordClient,DSharpPlus.EventArgs.ComponentInteractionCreateEventArgs)">
            <summary>
            Handles the event when a component interaction is created, like button clicks.
            </summary>
            <param name="sender">The Discord client instance.</param>
            <param name="e">Event arguments containing information about the component interaction.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if the <paramref name="sender"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:KWiJisho.Events.DiscordComponentHandler.CopyServerNameAsync(DSharpPlus.EventArgs.ComponentInteractionCreateEventArgs)">
            <summary>
            Copies the server name from the interaction's message and puts it into the clipboard.
            Sends a feedback message to the user.
            </summary>
            <param name="e">Event arguments containing information about the component interaction.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="T:KWiJisho.Events.DiscordGuildHandler">
            <summary>
            Provides a set of events and methods fired when a user enters and leaves a discord
            server.
            </summary>
        </member>
        <member name="M:KWiJisho.Events.DiscordGuildHandler.OnGuildMemberAddedAsync(DSharpPlus.DiscordClient,DSharpPlus.EventArgs.GuildMemberAddEventArgs)">
            <summary>
            Handles the event when a new member joins the Discord server. Sends a welcome message
            with a image and a random string.
            </summary>
            <param name="sender">The discord client instance.</param>
            <param name="e">Event arguments containing information about the guild member.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the assynchronous operation.</returns>
        </member>
        <member name="M:KWiJisho.Events.DiscordGuildHandler.OnGuildMemberRemovedAsync(DSharpPlus.DiscordClient,DSharpPlus.EventArgs.GuildMemberRemoveEventArgs)">
            <summary>
            Handles the event when a member leaves the Discord server. Sends a goodbye message
            with a image and a random string.
            </summary>
            <param name="sender">The discord client instance.</param>
            <param name="e">Events arguments containing information about the guild member.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the assynchronous operation.</returns>
        </member>
        <member name="F:KWiJisho.Events.DiscordGuildHandler.EventType.Welcome">
            <summary>
            Welcome event.
            </summary>
        </member>
        <member name="F:KWiJisho.Events.DiscordGuildHandler.EventType.Goodbye">
            <summary>
            Goodbye event.
            </summary>
        </member>
        <member name="M:KWiJisho.Events.DiscordGuildHandler.GetRandomWelcomeMessage(System.String)">
            <summary>
            Gets a random string welcome message.
            </summary>
            <param name="user">The user that will receive the welcome message.</param>
            <returns>The string containing the welcome message .</returns>
        </member>
        <member name="M:KWiJisho.Events.DiscordGuildHandler.GetRandomGoodbyeMessage(System.String)">
            <summary>
            Gets a random string goodbye message.
            </summary>
            <param name="user">The user that will receive the welcome message.</param>
            <returns>The string containing the goodbye message .</returns>
        </member>
        <member name="M:KWiJisho.Events.DiscordGuildHandler.GetRandomMessage(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Gets a random string for any provided message type.
            </summary>
            <param name="messages">The message list.</param>
            <param name="user">The user that will be part of the provided message type</param>
            <returns>The string containing the message.</returns>
        </member>
        <member name="T:KWiJisho.Events.DiscordMessageHandler">
            <summary>
            Provides a set of events and methods for when a message is received.
            </summary>
        </member>
        <member name="T:KWiJisho.Events.DiscordReadyHandler">
            <summary>
            Provides a set of events and methods fired when bot starts.
            </summary>
        </member>
        <member name="P:KWiJisho.Events.DiscordReadyHandler.DiscordActivity">
            <summary>
            Initializing Discord bot activity class.
            </summary>
        </member>
        <member name="M:KWiJisho.Events.DiscordReadyHandler.OnReadyAsync(System.Object,DSharpPlus.EventArgs.ReadyEventArgs,DSharpPlus.DiscordClient)">
            <summary>
            Handles the events when the bot's client is ready.
            </summary>
            <param name="sender">The object that triggered the events.</param>
            <param name="e">The event arguments containing information about the ready event.</param>
            <param name="discordClient">The Discord client instance.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous execution of the event handler.</returns>
        </member>
        <member name="T:KWiJisho.KWiJishoBot">
            <summary>
            Main class responsible for managing and instantiate the KWiJisho Discord bot. The main entry
            point class of the application.
            </summary>
            <summary>
            Main class responsible for managing and instantiate the KWiJisho Discord bot.
            </summary>
        </member>
        <member name="P:KWiJisho.KWiJishoBot.DiscordClient">
            <summary>
            Gets or sets the Discord client instance used by the bot.
            </summary>
        </member>
        <member name="P:KWiJisho.KWiJishoBot.PrefixCommands">
            <summary>
            Gets or sets the <see cref="T:DSharpPlus.CommandsNext.CommandsNextExtension"/> instance for handling bot prefix commands.
            </summary>
        </member>
        <member name="P:KWiJisho.KWiJishoBot.SlashCommands">
            <summary>
            Gets or sets the <see cref="T:DSharpPlus.SlashCommands.SlashCommandsExtension"/> instance for handling bot slash commands.
            </summary>
        </member>
        <member name="P:KWiJisho.KWiJishoBot.LogContext">
            <summary>
            The log context.
            </summary>
        </member>
        <member name="M:KWiJisho.KWiJishoBot.Main">
            <summary>
            The main entry point method of the application.
            </summary>
        </member>
        <member name="M:KWiJisho.KWiJishoBot.RunAsync">
            <summary>
            Asynchronously runs the bot connecting it to the Discord and initializing
            the necessary configurations.
            </summary>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="M:KWiJisho.KWiJishoBot.RegisterPrefixCommands">
            <summary>
            Register all the Discord bot prefix commands.
            </summary>
        </member>
        <member name="M:KWiJisho.KWiJishoBot.RegisterSlashCommands">
            <summary>
            Register all the Discord bot slash commands.
            </summary>
        </member>
        <member name="M:KWiJisho.KWiJishoBot.RegisterSlashCommandsToServer(System.Nullable{System.UInt64})">
            <summary>
            Register all the Discord bot slash commands to a server.
            </summary>
        </member>
        <member name="M:KWiJisho.KWiJishoBot.RegisterBotEvents">
            <summary>
            Register all the Discord bot events.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KWiJisho.KWiJishoBot.RegisterPrefixCommandEvents">
            <summary>
            Register all the Discord bot prefix commands permissions.
            </summary>
        </member>
        <member name="M:KWiJisho.KWiJishoBot.RegisterSlashCommandEvents">
            <summary>
            Register all the Discord bot slash commands permissions.
            </summary>
        </member>
        <member name="T:KWiJisho.Models.Birthday">
            <summary>
            Class that provides a set of utilities for birthday tasks.
            </summary>
        </member>
        <member name="M:KWiJisho.Models.Birthday.GetBirthdayList">
            <summary>
            Gets a list of users ordered by how closer are their birthday.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> containing a group of <see cref="T:KWiJisho.Entities.User"/> and their <see cref="P:KWiJisho.Entities.User.Birthday"/> ordered by their birthday date.</returns>
        </member>
        <member name="M:KWiJisho.Models.Birthday.GetNextUserToMakeBirthday(DSharpPlus.Entities.DiscordGuild)">
            <summary>
            Tries to get the user if they are presents in current Discord server.
            </summary>
            <param name="discordGuild"></param>
            <returns>Returns the <see cref="T:KWiJisho.Entities.User"/> if avaiable in current Discord server; otherwise, returns <see langword="null"/>.</returns>
        </member>
        <member name="M:KWiJisho.Models.Birthday.GenerateBirthdayMessageAsync(KWiJisho.Entities.User)">
            <summary>
            Method responsible for generating a birthday message.
            </summary>
            <param name="user">The user that to get the generated birthday message.</param>
            <returns>A <see cref="T:System.String"/> containing the generated birthday message.</returns>
            <exception cref="T:System.NotImplementedException">Thrown if the upcoming birthday date is not yet implemented on this
            current method.</exception>
        </member>
        <member name="M:KWiJisho.Models.Birthday.GetBirthdayDaysRemaining(KWiJisho.Entities.User)">
            <summary>
            Get how many days are remaning for the user's birthday.
            </summary>
            <param name="discordUser">The user to get how many years are remaining for they
            birthday.</param>
            <returns>A <see cref="T:System.Double"/> containing the number of days remaining for they birthday.</returns>
        </member>
        <member name="M:KWiJisho.Models.Birthday.GetBirthdayUpcomingDate(System.Double)">
            <summary>
            Gets the <see cref="T:KWiJisho.Models.Birthday.BirthdayUpcomingDate"/> based on how much days are remaining for it.
            </summary>
            <param name="daysRemaning">How many days are remaining for the birthday.</param>
            <returns>The <see cref="T:KWiJisho.Models.Birthday.BirthdayUpcomingDate"/> based on how many days are remaning.</returns>
            <exception cref="T:System.NotImplementedException">Thrown if the upcoming birthday date is not yet implemented
            on this current method.</exception>
        </member>
        <member name="T:KWiJisho.Models.Birthday.BirthdayUpcomingDate">
            <summary>
            Represents options for categorizing upcoming birthday dates.
            </summary>
        </member>
        <member name="F:KWiJisho.Models.Birthday.BirthdayUpcomingDate.Today">
            <summary>
            Indicates an upcoming birthday today.
            </summary>
        </member>
        <member name="F:KWiJisho.Models.Birthday.BirthdayUpcomingDate.Tomorrow">
            <summary>
            Indicates an upcoming birthday tomorrow.
            </summary>
        </member>
        <member name="F:KWiJisho.Models.Birthday.BirthdayUpcomingDate.InSomeDays">
            <summary>
            Indicates an upcoming birthday in the future, beyond tomorrow.
            </summary>
        </member>
        <member name="F:KWiJisho.Models.Birthday.BirthdayUpcomingDate.Unspecified">
            <summary>
            Indicates a birthday with an unknown or unspecified date, but that stills deserves a happy birthday.
            </summary>
        </member>
        <member name="M:KWiJisho.Models.Nasa.BuildEnglishApodMessageAsync(KWiJisho.APIs.NasaApi.Apod.ApodResponse)">
            <summary>
            Asynchronously builds a english apod message with the apod response.
            </summary>
            <param name="apodResponse">The APOD response content to build the embed.</param>
            <returns>The <see cref="T:KWiJisho.Models.Nasa.ApodBuilder"/>.</returns>
        </member>
        <member name="M:KWiJisho.Models.Nasa.BuildPortugueseApodMessageAsync(KWiJisho.APIs.NasaApi.Apod.ApodResponse)">
            <summary>
            Asynchronously builds a portuguese apod message with the apod response.
            </summary>
            <param name="apodResponse">The APOD response content to build the embed.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing the <see cref="T:KWiJisho.Models.Nasa.ApodBuilder"/>.</returns>
        </member>
        <member name="M:KWiJisho.Models.Nasa.BuildApodMessageAsync(KWiJisho.Models.Nasa.ApodLanguage,KWiJisho.APIs.NasaApi.Apod.ApodResponse)">
            <summary>
            Asynchronously builds a apod message with the apod response in the specified language.
            </summary>
            <param name="apodResponse">The APOD response content to build the embed.</param>
            <param name="apodLanguage">The language retrieved by the APOD.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing the <see cref="T:KWiJisho.Models.Nasa.ApodBuilder"/>.</returns>
        </member>
        <member name="T:KWiJisho.Models.Nasa.ApodLanguage">
            <summary>
            The languages avaiable for translating the APOD.
            </summary>
        </member>
        <member name="F:KWiJisho.Models.Nasa.ApodLanguage.Portuguese">
            <summary>
            The portuguese language.
            </summary>
        </member>
        <member name="F:KWiJisho.Models.Nasa.ApodLanguage.English">
            <summary>
            The english language.
            </summary>
        </member>
        <member name="T:KWiJisho.Models.Nasa.ApodBuilder">
            <summary>
            Builder class for creating a Discord embed for Astronomy Picture of the Day (APOD) information.
            </summary>
        </member>
        <member name="P:KWiJisho.Models.Nasa.ApodBuilder.TitleField">
            <summary>
            Gets or initializes the title field for the APOD embed.
            </summary>
        </member>
        <member name="P:KWiJisho.Models.Nasa.ApodBuilder.TitleContent">
            <summary>
            Gets or initializes the title content for the APOD embed.
            </summary>
        </member>
        <member name="P:KWiJisho.Models.Nasa.ApodBuilder.ExplanationField">
            <summary>
            Gets or initializes the explanation field for the APOD embed.
            </summary>
        </member>
        <member name="P:KWiJisho.Models.Nasa.ApodBuilder.ExplanationContent">
            <summary>
            Gets or initializes the explanation content for the APOD embed.
            </summary>
        </member>
        <member name="P:KWiJisho.Models.Nasa.ApodBuilder.VideoField">
            <summary>
            Gets or initializes the video URL field for the APOD embed.
            </summary>
        </member>
        <member name="P:KWiJisho.Models.Nasa.ApodBuilder.MediaUrl">
            <summary>
            Gets or initializes the content URL for the APOD embed.
            </summary>
        </member>
        <member name="P:KWiJisho.Models.Nasa.ApodBuilder.MediaType">
            <summary>
            Gets or initializes the media type for the APOD embed.
            </summary>
        </member>
        <member name="P:KWiJisho.Models.Nasa.ApodBuilder.CopyrightContent">
            <summary>
            Gets or initializes the copyright content for the APOD embed.
            </summary>
        </member>
        <member name="P:KWiJisho.Models.Nasa.ApodBuilder.NullCopyrightField">
            <summary>
            Gets or initializes the placeholder for null copyright field in the APOD embed.
            </summary>
        </member>
        <member name="P:KWiJisho.Models.Nasa.ApodBuilder.DateField">
            <summary>
            Gets or initializes the date field for the APOD embed.
            </summary>
        </member>
        <member name="P:KWiJisho.Models.Nasa.ApodBuilder.DateContent">
            <summary>
            Gets or initializes the date content for the APOD embed.
            </summary>
        </member>
        <member name="P:KWiJisho.Models.Nasa.ApodBuilder.DateFormat">
            <summary>
            Gets or initializes the date format for the date in the APOD embed.
            </summary>
        </member>
        <member name="M:KWiJisho.Models.Nasa.ApodBuilder.GetDiscordEmbedBuilder">
            <summary>
            Builds and returns a Discord embed builder based on the provided APOD information.
            </summary>
            <returns>A <see cref="T:DSharpPlus.Entities.DiscordEmbedBuilder"/> representing the APOD information in embed format.</returns>
        </member>
        <member name="T:KWiJisho.Scheduling.BirthdayJob">
            <summary>
            Represents a Quartz.NET job that executes a birthday message task.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:KWiJisho.Scheduling.BirthdayJob.Execute(Quartz.IJobExecutionContext)" -->
        <member name="M:KWiJisho.Scheduling.BirthdayJob.GiveBirthdayMessageAsync">
            <summary>
            Sends a birthday message as an asynchronous task.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous execution of the birthday message task.</returns>
        </member>
        <member name="T:KWiJisho.Scheduling.Scheduler">
            <summary>
            Provides methods for scheduling tasks.
            </summary>
        </member>
        <member name="M:KWiJisho.Scheduling.Scheduler.CreateAllSchedulersAsync(DSharpPlus.DiscordClient)">
            <summary>
            Creates all schedulers using Quartz.NET library.
            </summary>
            <param name="discordClient">The discord client.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous creation of the birthday scheduler.</returns>
        </member>
        <member name="M:KWiJisho.Scheduling.Scheduler.CreateBirthdaySchedulerAsync(DSharpPlus.DiscordClient)">
            <summary>
            Creates a birthday scheduler using Quartz.NET library.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous creation of the birthday scheduler.</returns>
        </member>
        <member name="T:KWiJisho.Utils.CommandCooldown">
            <summary>
            A utility class that manages cooldown for executing commands and methods.
            </summary>
            <param name="maxUses">The max uses allowed before the wait of time to cooldown reset.</param>
            <param name="resetAfter">The time to reset, when it reached the end allow user to execute the command again.</param>
            <param name="cooldownPurpose">The purpose of this cooldown for user explanation.</param>
        </member>
        <member name="M:KWiJisho.Utils.CommandCooldown.#ctor(System.Int32,System.TimeSpan,System.String)">
            <summary>
            A utility class that manages cooldown for executing commands and methods.
            </summary>
            <param name="maxUses">The max uses allowed before the wait of time to cooldown reset.</param>
            <param name="resetAfter">The time to reset, when it reached the end allow user to execute the command again.</param>
            <param name="cooldownPurpose">The purpose of this cooldown for user explanation.</param>
        </member>
        <member name="P:KWiJisho.Utils.CommandCooldown.MaxUses">
            <summary>
            Max uses allowed before the wait of time to cooldown reset.
            </summary>
        </member>
        <member name="P:KWiJisho.Utils.CommandCooldown.TimeToReset">
            <summary>
            Time to reset and allow new command uses.
            </summary>
        </member>
        <member name="P:KWiJisho.Utils.CommandCooldown.CooldownPurpose">
            <summary>
            A brief explanation of the purpose of the cooldown.
            </summary>
        </member>
        <member name="P:KWiJisho.Utils.CommandCooldown.Requests">
            <summary>
            The requests made for this cooldown instance.
            </summary>
        </member>
        <member name="M:KWiJisho.Utils.CommandCooldown.CanExecute(DSharpPlus.Entities.DiscordChannel)">
            <summary>
            Checks if user can execute the action or if is necessary to wait.
            </summary>
            <param name="discordChannel">The channel where the message will be sent.</param>
            <returns>A <see cref="T:System.Boolean"/> saying if the requested action could be executed or not.</returns>
        </member>
        <member name="M:KWiJisho.Utils.CommandCooldown.GetTimeRemainingString(System.TimeSpan)">
            <summary>
            Gets a string representation of the provided time remaining.
            </summary>
            <param name="timeSpan">The time remaining to get the representation.</param>
            <returns>The <see cref="T:System.String"/> representation of how much time is remaining.</returns>
        </member>
        <member name="M:KWiJisho.Utils.CommandCooldown.GetTimeRemainingStrings(System.TimeSpan)">
            <summary>
            Gets a list containing string representations of the provided time remaining.
            </summary>
            <param name="timeSpan">The time remaining to get the strings accordingly.</param>
            <returns>The <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing a list of <see cref="T:System.String"/> representing how
            much time is remaining for each <see cref="T:System.TimeSpan"/> property.</returns>
        </member>
        <member name="T:KWiJisho.Utils.DiscordCustomEmbed">
            <summary>
            Utility class providing default embeds for KWiJisho Discord bot.
            </summary>
        </member>
        <member name="T:KWiJisho.Utils.DiscordFormat">
            <summary>
            Provides utility extension methods for formatting text with Discord markdown.
            </summary>
        </member>
        <member name="M:KWiJisho.Utils.DiscordFormat.ToDiscordBold(System.String)">
            <summary>
            Formats the specified string in bold using Discord markdown.
            </summary>
            <param name="str">The string to be formatted.</param>
            <returns>The string in bold.</returns>
        </member>
        <member name="M:KWiJisho.Utils.DiscordFormat.ToDiscordItalic(System.String)">
            <summary>
            Formats the specified string in italic using Discord markdown.
            </summary>
            <param name="str">The string to be formatted.</param>
            <returns>The string in italic.</returns>
        </member>
        <member name="M:KWiJisho.Utils.DiscordFormat.ToDiscordEscape(System.String)">
            <summary>
            Formats the specified string to be escaped using Discord markdown.
            </summary>
            <param name="str">The string to be formatted.</param>
            <returns>The escaped string.</returns>
        </member>
        <member name="M:KWiJisho.Utils.DiscordFormat.ToDiscordMonospace(System.String)">
            <summary>
            Formats the specified string in monospaced using Discord markdown.
            </summary>
            <param name="str"></param>
            <returns>The string in monospaced</returns>
        </member>
        <member name="M:KWiJisho.Utils.DiscordFormat.ToDiscordLink(System.String,System.String)">
            <summary>
            Formats the specified string in a link using Discord markdown.
            </summary>
            <param name="str">The string to be formatted.</param>
            <param name="url">The link url.</param>
            <returns>The string as a link.</returns>
        </member>
        <member name="T:KWiJisho.Utils.DiscordFormat.DiscordDateTimeFormat">
            <summary>
            Represents a date in Discord date format.
            </summary>
        </member>
        <member name="F:KWiJisho.Utils.DiscordFormat.DiscordDateTimeFormat.Default">
            <summary>
            Represents a long date and time format.
            </summary>
            <remarks>
            Example: <code>&lt;t:1038146764&gt;</code> results in November 24, 2002 12:06 PM.
            </remarks>
        </member>
        <member name="F:KWiJisho.Utils.DiscordFormat.DiscordDateTimeFormat.Long">
            <summary>
            Represents a long date and time format.
            </summary>
            <remarks>
            Example: <code>&lt;t:1038146764:f&gt;</code> results in November 24, 2002 12:06 PM.
            </remarks>
        </member>
        <member name="F:KWiJisho.Utils.DiscordFormat.DiscordDateTimeFormat.Full">
            <summary>
            Represents a full date and time format with the day of the week.
            </summary>
            <remarks>
            Example: <code>&lt;t:1038146764:F&gt;</code> results in Sunday, November 24, 2002 12:06 PM.
            </remarks>
        </member>
        <member name="F:KWiJisho.Utils.DiscordFormat.DiscordDateTimeFormat.DateOnly">
            <summary>
            Represents a short date format.
            </summary>
            <remarks>
            Example: <code>&lt;t:1038146764:d&gt;</code> results in 11/24/2002.
            </remarks>
        </member>
        <member name="F:KWiJisho.Utils.DiscordFormat.DiscordDateTimeFormat.DateMonthName">
            <summary>
            Represents a long date format.
            </summary>
            <remarks>
            Example: <code>&lt;t:1038146764:D&gt;</code> results in November 24, 2002.
            </remarks>
        </member>
        <member name="F:KWiJisho.Utils.DiscordFormat.DiscordDateTimeFormat.HourMinute">
            <summary>
            Represents a short time format.
            </summary>
            <remarks>
            Example: <code>&lt;t:1038146764:t&gt;</code> results in 12:06 PM.
            </remarks>
        </member>
        <member name="F:KWiJisho.Utils.DiscordFormat.DiscordDateTimeFormat.HourMinuteSeconds">
            <summary>
            Represents a long time format including seconds.
            </summary>
            <remarks>
            Example: <code>&lt;t:1038146764:T&gt;</code> results in 12:06:04 PM.
            </remarks>
        </member>
        <member name="F:KWiJisho.Utils.DiscordFormat.DiscordDateTimeFormat.RelativeTime">
            <summary>
            Represents relative time (e.g., "22 years ago" or "6 hours ago").
            </summary>
            <remarks>
            Example: <code>&lt;t:1038146764:R&gt;</code> results in 22 years ago".
            </remarks>
        </member>
        <member name="T:KWiJisho.Utils.KWiJishoPermission">
            <summary>
            Provides utility methods for handling permissions in the KWiJisho application.
            </summary>
        </member>
        <member name="M:KWiJisho.Utils.KWiJishoPermission.PermissionCustomErrorMessage(DSharpPlus.Permissions)">
            <summary>
            Generates a custom error message for a permission check failure.
            </summary>
            <param name="permission">The required permission.</param>
            <returns>A formatted error message indicating the required permission.</returns>
        </member>
        <member name="M:KWiJisho.Utils.KWiJishoPermission.CooldownCustomErrorMessage(System.Int32,System.Int32,System.String)">
            <summary>
            Generates a custom error message for cooldown check.
            </summary>
            <param name="maxExecute">The command max execution time.</param>
            <param name="cooldown">The command cooldown.</param>
            <param name="cooldownPurpose">The purpose of the cooldown. (if present)</param>
            <returns></returns>
        </member>
        <member name="M:KWiJisho.Utils.KWiJishoPermission.GetPermissionNameInPortuguese(DSharpPlus.Permissions)">
            <summary>
            Gets the Portuguese name of a Discord permission.
            </summary>
            <param name="permission">The Discord permission.</param>
            <returns>The Portuguese name of the permission.</returns>
        </member>
        <member name="T:KWiJisho.Utils.Log">
            <summary>
            Provides methods for handling the application log for important tasks.
            </summary>
        </member>
        <member name="M:KWiJisho.Utils.Log.#ctor(DSharpPlus.DiscordClient)">
            <summary>
            Provides methods for handling the application log for important tasks.
            </summary>
        </member>
        <member name="F:KWiJisho.Utils.Log.FileName">
            <summary>
            The log file name.
            </summary>
        </member>
        <member name="T:KWiJisho.Utils.Log.LogType">
            <summary>
            Represents options for the application log type.
            </summary>
        </member>
        <member name="F:KWiJisho.Utils.Log.LogType.Debug">
            <summary>
            Indicated a debug level log.
            </summary>
        </member>
        <member name="F:KWiJisho.Utils.Log.LogType.Info">
            <summary>
            Indicated a info level log.
            </summary>
        </member>
        <member name="F:KWiJisho.Utils.Log.LogType.Warning">
            <summary>
            Indicated a warning level log.
            </summary>
        </member>
        <member name="F:KWiJisho.Utils.Log.LogType.Error">
            <summary>
            Indicated a error level log.
            </summary>
        </member>
        <member name="F:KWiJisho.Utils.Log.LogType.Fatal">
            <summary>
            Indicated a fatal level log.
            </summary>
        </member>
        <member name="T:KWiJisho.Utils.Log.Module">
            <summary>
            Represents the command modules for the application.
            </summary>
        </member>
        <member name="F:KWiJisho.Utils.Log.Module.CommandExecution">
            <summary>
            Represents the slash and prefix commands module.
            </summary>
        </member>
        <member name="F:KWiJisho.Utils.Log.Module.ChatGpt">
            <summary>
            Represents the ChatGpt module.
            </summary>
        </member>
        <member name="F:KWiJisho.Utils.Log.Module.System">
            <summary>
            Represents the general system KWiJisho module.
            </summary>
        </member>
        <member name="F:KWiJisho.Utils.Log.Module.Basic">
            <summary>
            Represents the module for "Basic" commands.
            </summary>
        </member>
        <member name="F:KWiJisho.Utils.Log.Module.Birthday">
            <summary>
            Represents the module for "Birthday" commands.
            </summary>
        </member>
        <member name="F:KWiJisho.Utils.Log.Module.Info">
            <summary>
            Represents the module for "Info" commands.
            </summary>
        </member>
        <member name="F:KWiJisho.Utils.Log.Module.KWiGpt">
            <summary>
            Represents the module for "KWiGpt" commands.
            </summary>
        </member>
        <member name="F:KWiJisho.Utils.Log.Module.Nasa">
            <summary>
            Represents the module for "Nasa" commands.
            </summary>
        </member>
        <member name="F:KWiJisho.Utils.Log.Module.Notice">
            <summary>
            Represents the module for "Notice" commands.
            </summary>
        </member>
        <member name="F:KWiJisho.Utils.Log.Module.ThemeTramontina">
            <summary>
            Represents the module for "ThemeTramontina" commands.
            </summary>
        </member>
        <member name="M:KWiJisho.Utils.Log.AddDebugAsync(KWiJisho.Utils.Log.Module,KWiJisho.Utils.LogContext,System.String)">
            <summary>
            Adds a debug log entry with the specified message.
            </summary>
            <param name="message">The debug log message.</param>
        </member>
        <member name="M:KWiJisho.Utils.Log.AddInfoAsync(KWiJisho.Utils.Log.Module,KWiJisho.Utils.LogContext,System.String)">
            <summary>
            Adds a info log entry with the specified message.
            </summary>
            <param name="message">The info log message.</param>
        </member>
        <member name="M:KWiJisho.Utils.Log.AddWarningAsync(KWiJisho.Utils.Log.Module,KWiJisho.Utils.LogContext,System.String)">
            <summary>
            Adds a warning log entry with the specified message.
            </summary>
            <param name="message">The warning log message.</param>
        </member>
        <member name="M:KWiJisho.Utils.Log.AddErrorAsync(KWiJisho.Utils.Log.Module,KWiJisho.Utils.LogContext,System.String)">
            <summary>
            Adds a error log entry with the specified message.
            </summary>
            <param name="message">The error log message.</param>
        </member>
        <member name="M:KWiJisho.Utils.Log.AddFatalAsync(KWiJisho.Utils.Log.Module,KWiJisho.Utils.LogContext,System.String)">
            <summary>
            Adds a fatal log entry with the specified message.
            </summary>
            <param name="message">The fatal log message.</param>
        </member>
        <member name="M:KWiJisho.Utils.Log.AddCustomLogAsync(KWiJisho.Utils.Log.LogType,KWiJisho.Utils.Log.Module,KWiJisho.Utils.LogContext,System.String)">
            <summary>
            Adds a formatted log entry to the log file.
            </summary>
            <param name="logType">The type of log entry.</param>
            <param name="message">The log message to be added.</param>
        </member>
        <member name="M:KWiJisho.Utils.Log.AddEntryAsync(System.String)">
            <summary>
            Adds a line to the log file or send to discord log channel with the specified content.
            </summary>
            <param name="entry">The entry to be added to the log.</param>
        </member>
        <member name="P:KWiJisho.Utils.LogContext.ContextType">
            <summary>
            The context type of the log context.
            Examples: "Command" for user commands, "Job" for automated tasks.
            </summary>
        </member>
        <member name="P:KWiJisho.Utils.LogContext.Action">
            <summary>
            The action from the log context.
            Examples: "!help", "/happy-birthday", "BirthdayCheck" (in case of birthday check triggered by the job)
            </summary>
        </member>
        <member name="P:KWiJisho.Utils.LogContext.IssuerId">
            <summary>
            The issuer of the log context.
            If the action was performed by a user, this should contain their user ID.
            If it was triggered by a KWiJisho bot job, use a descriptive label like "Scheduler Job".
            </summary>
        </member>
        <member name="P:KWiJisho.Utils.LogContext.GuildId">
            <summary>
            The guild id of the log context.
            </summary>
        </member>
        <member name="P:KWiJisho.Utils.Logs.DefaultLog">
            <summary>
            Gets or sets the <see cref="T:KWiJisho.KWiJishoBot"/> instance for handling bot log.
            </summary>
        </member>
        <member name="T:KWiJisho.Utils.UtilCollections">
            <summary>
            Provides utility methods for working with lists.
            </summary>
        </member>
        <member name="M:KWiJisho.Utils.UtilCollections.GetRandomValueFromList``1(System.Collections.Generic.List{``0})">
            <summary>
            Returns a random value from a given list.
            </summary>
            <typeparam name="T">The type of elements in the list.</typeparam>
            <param name="list">The list from which to retrieve a random value.</param>
            <returns>A random value from the list.</returns>
        </member>
        <member name="T:KWiJisho.Utils.UtilDate">
            <summary>
            Provides utility methods for working with dates.
            </summary>
        </member>
        <member name="M:KWiJisho.Utils.UtilDate.ConvertDateTimeToISO8601AsString(System.DateTime)">
            <summary>
            Returns the date in ISO 8601 date format.
            </summary>
            <param name="dateTime">The DateTime to be converted.</param>
            <returns>A string containing a date in the ISO 8601 format.</returns>
        </member>
        <member name="M:KWiJisho.Utils.UtilDate.ConvertDateTimeToUnixTimestamp(System.DateTime)">
            <summary>
            Returns the date in UNIX date format.
            </summary>
            <param name="dateTime">The DateTime to be converted.</param>
            <returns>A long containing a date in the UNIX format.</returns>
        </member>
        <member name="T:Monambike.Core.Services.HttpService">
            <summary>
            A simple HTTP service for making GET requests and retrieving the response content.
            </summary>
        </member>
        <member name="M:Monambike.Core.Services.HttpService.#ctor(System.String)">
            <summary>
            A simple HTTP service for making GET requests and retrieving the response content.
            </summary>
        </member>
        <member name="P:Monambike.Core.Services.HttpService.Address">
            <summary>
            Base address for making api requests.
            </summary>
        </member>
        <member name="P:Monambike.Core.Services.HttpService.HttpClient">
            <summary>
            HttpClient for making api requests.
            </summary>
        </member>
        <member name="M:Monambike.Core.Services.HttpService.GetAsync``1(System.String)">
            <summary>
            Sends an asynchronous GET request to the specified URI and returns the response content as a string.
            </summary>
            <param name="strRequest">The URI of the resource to request.</param>
            <returns>A Task representing the asynchronous operation. The result contains the response content as a string.</returns>
        </member>
    </members>
</doc>
